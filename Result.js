const checkGraids = (graidsArray) => {
    let result = false;
    graidsArray.forEach((graid) => {
        if (graid >= 0 && graid <= 25) {
            result = true;
        }
    });
    return result;
}

/**
* @param {number} N - целое число, количество сотрудников готовых к объединению
* @param {number[]} staff - массив длины N с грейдами доступных сотрудников
* @param {number} K - целое число, количество доступных клавиатур
* @returns {number}
*/
module.exports = function (N, staff, K) {
    if (
        (N >= 1 && N <= (10 ** 7 + 100)) &&
        checkGraids(staff) &&
        (K >= 1 && K <= N)
    ) {
        let result = 0;         // тут будем хранить результат
        let obj = {};           // объект ключами будут возможные значения грейдов, а значениями будут их количество
        let objKeys = [];       // ключи объекта пихнем сюда

        for (i = 0; i < staff.length; i++) {    // перебираем наши грейды
            if (obj[staff[i]]) {                // если в объекте уже есть ключ равный грейду
                obj[staff[i]]++;                // то увеличим его значение на 1
            }
            else {                              // если в ключ равный грейду встречаем впервые 
                obj[staff[i]] = 1;              // то создаем новую пару ключ значение 
            }
        }

        objKeys = Object.keys(obj);         // соберем все возможные значения грейдов в один массив из за того что собираем из объекта то получаем уже отсортированный массив

        for (i = objKeys.length; i > 0; i--) {  // перебираем возможные значения грейдов от большего к меньшему
            if (K >= obj[objKeys[i - 1]]) {     // если K (клавиатур) больше или равно количеству разработчиков итерируемого грейда
                result += objKeys[i - 1] * obj[objKeys[i - 1]]; // то к результату прибавим произведение грейда и количества разработчиков с этим грейдом
                K -= obj[objKeys[i - 1]];       // отнимаем от K (количества свободных клавиатур) количество разрабов итерируемого грейда
            }
            else {                              // если K (клавиатур) меньше количества разработчиков итерируемого грейда
                result += objKeys[i - 1] * K;   // то к результату прибавим произведение грейда и количества свободных клавиатур
                break;                          // и выходим из цикла
            }
        }
        return result;                          // вернем результат
    }
    else {
        return 'Ошибка входных значений!';
    }
}
